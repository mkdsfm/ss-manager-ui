name: Update README via PR

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  generate-readme:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write 

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
           token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Run script to generate README
        run: python docs/generate_readme.py

      - name: Fetch full history to compare with remote
        run: git fetch origin main

      - name: Check for actual changes compared to origin/main
        id: readme-check
        run: |
          if git diff --quiet origin/main -- README.md; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Git user
        run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com" 

      - name: Create new branch, commit and push
        if: steps.readme-check.outputs.changed == 'true'
        run: |
          BRANCH="update-readme-$(date +%s)"
          git checkout -b "$BRANCH"
          git add README.md
          git commit -m "chore(docs): update README"
          git push origin "$BRANCH"
          echo "branch_name=$BRANCH" >> "$GITHUB_ENV"

      - name: Create Pull Request
        if: steps.readme-check.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: ${{ env.branch_name }}
          title: "Update README"
          body: "Automated update of README.md"

      - name: Delete branch if exists and no changes
        if: steps.git-check.outputs.changed == 'false'
        run: |
          BRANCH="update-readme-*"
          git branch -r | grep "origin/$BRANCH" | while read remote_branch; do
            branch_name=${remote_branch#origin/}
            git push origin --delete "$branch_name"
          done || true
